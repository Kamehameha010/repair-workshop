@model Sistema_Taller.Models.ViewModels.RepuestoViewModel
@{

}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Crear</title>
    <link href="~/Content/jq/jquery-ui.css" rel="stylesheet" type="text/css" />
</head>
<body>
    <div class="dl-horizontal">
        @using (Html.BeginForm())
        {
            
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(m => m.IdProveedor, new { id="idProveedor" })
            <div class="form-group">
                @Html.LabelFor(m => m.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.EditorFor(m => m.Nombre, new { htmlAttributes = new { @class = "form-control", @id="nombre" } })
                    @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Telefono, new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.EditorFor(m => m.Telefono, new { htmlAttributes = new { @class = "form-control", @id="telefono" } })
                    @Html.ValidationMessageFor(m => m.Telefono, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Direccion, new { @class = "control-label col-md-2" })

                <div class="col-md-10">
                    @Html.EditorFor(m => m.Direccion, new { htmlAttributes = new { @class = "form-control",@id="direccion" } })
                    @Html.ValidationMessageFor(m => m.Direccion, "", new { @class = "text-danger" })
                </div>
            </div>

            <input type="submit" class="btn btn-success" value="Editar" id="editProveedor" />


        }

    </div>
    <div class="dl-horizontal border border-primary">
        @using (Html.BeginForm())
        {
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(m => m.IdProveedor, new { id = "idProveedor" })
            @Html.HiddenFor(m => m.IdInvRep, new { id = "idInventario" })
            <div class="row">
                <div class="form-group col-sm-6">
                    @Html.LabelFor(m => m.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Codigo, new { htmlAttributes = new { @class = "form-control", id = "Codigo" } })
                        @Html.ValidationMessageFor(m => m.Codigo, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm-6">
                    @Html.LabelFor(m => m.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Descripcion, new { htmlAttributes = new { @class = "form-control", id = "Descripcion" } })
                        @Html.ValidationMessageFor(m => m.Descripcion, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-sm-6">
                    @Html.LabelFor(m => m.Precio, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Precio, new { htmlAttributes = new { @class = "form-control", id = "Precio" } })
                        @Html.ValidationMessageFor(m => m.Precio, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group col-sm-6">
                    @Html.LabelFor(m => m.Cantidad, htmlAttributes: new { @class = "control-label col-md-2" })

                    <div class="col-md-10">
                        @Html.EditorFor(m => m.Cantidad, new { htmlAttributes = new { @class = "form-control", id = "Cantidad" } })
                        @Html.ValidationMessageFor(m => m.Cantidad, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-auto">
                    <input type="submit" class="btn btn-success" value="Editar" id="editPiece" />
                </div>

            </div>
        }

    </div>


</body>
</html>

@section Scripts{
    <script src="~/Content/jq/jquery-ui.js"></script>
    <script type="module" src="~/Scripts/js/Repuestojs/edit.js"></script>
    <script>
        //buscar(location.href)
        function buscar(url) {
            let id = /\d+$/.exec(url);

            fetch("/Repuesto/BuscarProveedorRepuesto/?id=" + id)
                .then(response => response.json())
                .then(data => {
                    p = data
                    let formProveedor = Object.fromEntries(new FormData(document.forms[0]));
                    formProveedor.constructor(idProveedor).value = data.idProveedor
                    formProveedor.constructor(nombre).value = data.nombre;
                    formProveedor.constructor(telefono).value = data.telefono;
                    formProveedor.constructor(direccion).value = data.direccion;
                    let formRepuesto = Object.fromEntries(new FormData(document.forms[1]));
                    formRepuesto.constructor(Repuestos_idInvRep).value = data.idInventario;
                    formRepuesto.constructor(Repuestos_codigo).value = data.Codigo;
                    formRepuesto.constructor(Repuestos_descripcion).value = data.Descripcion;
                    formRepuesto.constructor(Repuestos_precio).value = data.Precio;
                    formRepuesto.constructor(Repuestos_cantidad).value = data.Cantidad;
                })
                .catch(error => {
                    alert(error)
                })

        }

        document.getElementById("editProveedor").addEventListener("click", function () {
            let obj = {
                idProveedor: document.getElementById("idProveedor").value,
                nombre: document.getElementById("nombre").value,
                telefono: document.getElementById("telefono").value,
                direccion: document.getElementById("direccion").value
            }
            //actualizar("/Proveedor/Editar", obj);
        });
        document.getElementById("editPiece").addEventListener("click", function () {
            let obj = {
                idProveedor: document.getElementById("idProveedor").value,
                codigo: document.getElementById("Repuestos_codigo").value,
                descripcion: document.getElementById("Repuestos_descripcion").value,
                precio: document.getElementById("Repuestos_precio").value,
                cantidad: document.getElementById("Repuestos_cantidad").value,
                idInvRep: document.getElementById("Repuestos_idInvRep").value
            }
           // actualizar("/Repuesto/EditarRepuesto", obj);
        });

    </script>
}