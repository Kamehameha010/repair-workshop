@using Sistema_Taller.Models@model Sistema_Taller.Models.ViewModels.CasoViewModel@{	ViewBag.Title = "Crear";	Usuario o = Session["user"] as Usuario;}<h2>Crear</h2>@using (Html.BeginForm()){	<div class="form-horizontal">
	<h4>Actividad</h4>
	<hr />
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<div class="form-group">
		@Html.LabelFor(model => model.FechaIngreso, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.FechaIngreso, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
			@Html.ValidationMessageFor(model => model.FechaIngreso, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.NumeroCaso, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			@Html.EditorFor(model => model.NumeroCaso, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
			@Html.ValidationMessageFor(model => model.NumeroCaso, "", new { @class = "text-danger" })
		</div>
	</div>

	<div class="form-group">
		@Html.LabelFor(model => model.IdUsuario, htmlAttributes: new { @class = "control-label col-md-2" })
		<div class="col-md-10">
			<input type="hidden" value=@o.idUsuario />
			<input type="text" value=@o.username class="form-control"/>
			@Html.ValidationMessageFor(model => model.FechaIngreso, "", new { @class = "text-danger" })
		</div>
	</div>
	<div class="form-group">
		@Html.LabelFor(model => model.IdCliente, htmlAttributes: new { @class = "control-label col-md-2" })

		<div class="col-md-10">
			@Html.HiddenFor(model=>model.IdCliente)
			<input type="text" id="NCliente" class="form-control"/>
			@Html.ValidationMessageFor(model => model.IdCliente, "", new { @class = "text-danger" })
		</div>

	</div>

	<div class="form-group">
		<input class="btn btn-group-justified" type="button" value="Agregar Articulo" 
			   id="add" data-toggle="modal" data-target="#ArticuloModal" />
	</div>
	<div class="form-group" style="text-align:right">
		hola
	</div>

	<div class="table-responsive">
		<table class="table table-bordered table-hover" id="tablaCaso">
			<thead>
				<tr>
					<th>Articulo</th>
					<th>Modelo</th>
					<th>Serie</th>
					<th>Observacion</th>
					<th>Estado</th>
					<th></th>
				</tr>
			</thead>
			<tbody>
			</tbody>
		</table>

	</div>

	<div class="form-group">
		<div class="col-md-offset-0 col-md-10">
			<input type="button" value="Create" class="btn btn-default" id="create" />
		</div>
	</div>
	<div>
		@Html.ActionLink("Back to List", "Index")
	</div>
</div>}<div class="modal fade" id="ArticuloModal" role="dialog">	<div class="modal-dialog">		<div class="modal-content">			<div class="modal-header" style="padding:40px 50px;">				<button type="button" class="btn btn-danger close" data-dismiss="modal">&times;</button>				<h4><span class="glyphicon glyphicon-floppy-save"></span> Articulo</h4>			</div>			<div class="modal-body" style="padding: 40px 50px">				<form id="form2" role="form">					<div class="form-group">						<label for="Articulo"> Articulo:</label>						<input type="text" id="Articulo" name="Articulo" class="form-control" />					</div>					<div class="form-group">						<label for="Codigo"> Codigo:</label>						<input type="text" id="Codigo" name="Codigo" class="form-control" />					</div>					<div class="form-group">						<label for="Modelo"> Modelo:</label>						<input type="text" id="Modelo" name="Modelo" class="form-control" />					</div>					<div class="form-group">						<label for="Marca"> Marca</label><br />						@Html.DropDownList("Marca", ViewBag.marcas as IEnumerable<SelectListItem>, "Selecciona una opcion", new { @class = "form-control" })					</div>					<div class="form-group">						<label for="Categoria"> Categoria</label> <br />						@Html.DropDownList("Categoria", ViewBag.categorias as IEnumerable<SelectListItem>, "Selecciona una opcion", new { @class = "form-control" })					</div>					<div class="form-group">						<label for="Serie"> Serie</label>						<input type="text" id="Serie" name="Serie" class="form-control" />					</div>					<div class="form-group">						<label for="Observacion"> Observacion</label>						<textarea id="Observacion" name="Observacion" class="form-control"></textarea>					</div>					<div class="form-group">						<label for="Estado"> Estado</label>						@Html.DropDownList("Estado", ViewBag.estados as IEnumerable<SelectListItem>, new { @class = "form-control" })					</div>					<div class="modal-footer">						<input type="submit"  value="Agregar" id="btnAdd" />											</div>				</form>			</div>		</div>	</div></div>@section Scripts{	<script src="~/Scripts/js/Casojs/create.js" type="module"></script>	<script>        /*let fila = 0;        var det;        document.getElementById("create").addEventListener("click", add);               var arr = [];        document.getElementById("btnAdd").addEventListener("click", nuevoNegocio);		function Caso(numCaso, idUsuario, idCliente, detalles) {            //this.id = id;            this.NumeroCaso = numCaso;			this.IdUsuario = idUsuario;			this.IdCliente = idCliente;			this.Detalles = detalles		}        function CasoDetalle(detalle, idestado, articulo) {            this.id = 0;            this.Detalle = detalle;            this.Diagnostico = "";            this.IdEstadoCaso = idestado;            this.FechaDespacho = "";			this.Articulo = articulo;		}		function Articulo(nombre, codigo, modelo, idmarca, idcategoria, serie) {			this.Nombre = nombre;			this.Codigo = codigo;			this.Modelo = modelo;			this.IdMarca = idmarca;			this.IdCategoria = idcategoria;			this.Serie = serie;		}		function nuevoNegocio(e) {			if (document.getElementById("Categoria").value == "") {				e.preventDefault();			}			else if (document.getElementById("Estado").value == "") {				e.preventDefault();			}			else if (document.getElementById("Observacion").value == "") {				e.preventDefault();			}			else {				let tbody = document.querySelector("#tablaCaso tbody");				let row = tbody.insertRow(0);                let obj = Object.fromEntries(new FormData(document.forms[1]));                let art = new Articulo(obj.Articulo, obj.Codigo, obj.Modelo, obj.Marca, obj.Categoria, obj.Serie);                let arti = [art];                det = new CasoDetalle(obj.Observacion, obj.Estado,art);                arr.push(det);                let elements = [obj.Articulo, obj.Modelo, obj.Serie, obj.Observacion, obj.Estado];				for (let i = 0; i < elements.length; i++) {					console.log(elements[i]);					row.insertCell(i).innerHTML = elements[i];				}				//row.cells[0].hidden = true;				//row.cells[5].hidden = true;				row.insertCell(5).innerHTML = "<td><button type='button' class='edit alert-success'><span class='fa fa-edit'></span></button>\															 <button type='button' class='delete alert-danger'><span class='fa fa-trash'></span></button></td>";				fila++;				//eventos();			}		}		obtenerFecha();		ObtenerNumeroCaso();		$("#add").click(function () {			$("#ArticuloModal").modal();		});		function obtenerFecha() {			fetch("/Caso/Fecha")				.then(response => response.text())				.then(data => { document.getElementById("FechaIngreso").value = data })				.catch(error => console.log(error));		}		function ObtenerNumeroCaso() {			setInterval(function () {				fetch("/Caso/NumeroCaso")					.then(response => response.text())					.then(data => { console.log(data); document.getElementById("NumeroCaso").value = data })					.catch(error => console.log(error));			}, 10000);        }        function add() {                        let frmCaso = Object.fromEntries(new FormData(document.forms[0]))            let caso = new Caso(frmCaso.NumeroCaso, frmCaso.IdUsuario, frmCaso.IdCliente, arr);
            console.log(det);
            
            fetch("/Caso/Crear", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(caso)

            }).then(response => response.json())
                .then(data => {
                    if (data == "1") {
                        location.href = "/Caso/";
                    }
                }).catch(error => alert(error));
           
        }		*/	</script>}